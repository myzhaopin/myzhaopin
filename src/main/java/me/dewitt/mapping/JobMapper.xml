<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.dewitt.dao.JobMapper" >
  <resultMap id="BaseResultMap" type="me.dewitt.pojo.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="salary" property="salary" jdbcType="INTEGER" />
    <result column="verify" property="verify" jdbcType="BIT" />
    <result column="date" property="date" jdbcType="VARCHAR" />
    <result column="industry_name" property="industryName" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="me.dewitt.pojo.Job" extends="BaseResultMap" >
    <result column="information" property="information" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    job_id, company_id, title, salary, verify, date, industry_name
  </sql>
  <sql id="Blob_Column_List" >
    information
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="me.dewitt.pojo.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="me.dewitt.pojo.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_job
    where job_id = #{jobId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="me.dewitt.pojo.JobExample" >
    delete from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="me.dewitt.pojo.Job" >
    insert into t_job (job_id, company_id, title, 
      salary, verify, date, industry_name, 
      information)
    values (#{jobId,jdbcType=INTEGER}, #{companyId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{salary,jdbcType=INTEGER}, #{verify,jdbcType=BIT}, #{date,jdbcType=VARCHAR}, #{industryName,jdbcType=VARCHAR}, 
      #{information,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="me.dewitt.pojo.Job" >
    insert into t_job
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        job_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="salary != null" >
        salary,
      </if>
      <if test="verify != null" >
        verify,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="industryName != null" >
        industry_name,
      </if>
      <if test="information != null" >
        information,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobId != null" >
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="verify != null" >
        #{verify,jdbcType=BIT},
      </if>
      <if test="date != null" >
        #{date,jdbcType=VARCHAR},
      </if>
      <if test="industryName != null" >
        #{industryName,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        #{information,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="me.dewitt.pojo.JobExample" resultType="java.lang.Integer" >
    select count(*) from t_job
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_job
    <set >
      <if test="record.jobId != null" >
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.salary != null" >
        salary = #{record.salary,jdbcType=INTEGER},
      </if>
      <if test="record.verify != null" >
        verify = #{record.verify,jdbcType=BIT},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=VARCHAR},
      </if>
      <if test="record.industryName != null" >
        industry_name = #{record.industryName,jdbcType=VARCHAR},
      </if>
      <if test="record.information != null" >
        information = #{record.information,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      verify = #{record.verify,jdbcType=BIT},
      date = #{record.date,jdbcType=VARCHAR},
      industry_name = #{record.industryName,jdbcType=VARCHAR},
      information = #{record.information,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_job
    set job_id = #{record.jobId,jdbcType=INTEGER},
      company_id = #{record.companyId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      salary = #{record.salary,jdbcType=INTEGER},
      verify = #{record.verify,jdbcType=BIT},
      date = #{record.date,jdbcType=VARCHAR},
      industry_name = #{record.industryName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="me.dewitt.pojo.Job" >
    update t_job
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="salary != null" >
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="verify != null" >
        verify = #{verify,jdbcType=BIT},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=VARCHAR},
      </if>
      <if test="industryName != null" >
        industry_name = #{industryName,jdbcType=VARCHAR},
      </if>
      <if test="information != null" >
        information = #{information,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="me.dewitt.pojo.Job" >
    update t_job
    set company_id = #{companyId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      verify = #{verify,jdbcType=BIT},
      date = #{date,jdbcType=VARCHAR},
      industry_name = #{industryName,jdbcType=VARCHAR},
      information = #{information,jdbcType=LONGVARCHAR}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="me.dewitt.pojo.Job" >
    update t_job
    set company_id = #{companyId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      verify = #{verify,jdbcType=BIT},
      date = #{date,jdbcType=VARCHAR},
      industry_name = #{industryName,jdbcType=VARCHAR}
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>